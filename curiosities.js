// ================================================
// üß† BANCO DE DATOS CURIOSOS DE F√çSICA - VERSI√ìN MEJORADA
// Archivo: curiosities.js v2.1 (Mejorado para mayor visibilidad)
// ================================================

console.log('üß† Cargando banco de curiosidades MEJORADO v2.1...');

/* üéØ ESTRUCTURA DE CURIOSIDAD:
 * {
 *   title: 'string',        // üìù T√≠tulo de la curiosidad
 *   content: 'string',      // üìñ Contenido (puede incluir LaTeX con $$)
 *   category: 'string',     // üè∑Ô∏è Categor√≠a de f√≠sica
 *   difficulty: 1|2|3,      // ‚≠ê Nivel de complejidad
 *   source?: 'string'       // üìö Fuente opcional
 * }
 */

const curiosityDatabase = {
    
    // üåå F√çSICA FUNDAMENTAL Y CURIOSIDADES GENERALES
    fundamental: [
        {
            title: 'La Velocidad de la Luz',
            content: 'La velocidad de la luz en el vac√≠o es exactamente $$c = 299,792,458 \\, m/s$$. ¬°Es tan r√°pida que podr√≠a dar la vuelta a la Tierra 7.5 veces en un solo segundo!',
            category: 'fundamental',
            difficulty: 1,
            source: 'Constantes f√≠sicas fundamentales'
        },
        {
            title: 'Ecuaci√≥n M√°s Famosa del Universo',
            content: 'La ecuaci√≥n $$E = mc^2$$ de Einstein nos dice que una peque√±√≠sima cantidad de masa puede convertirse en una enorme cantidad de energ√≠a. ¬°Un gramo de materia contiene la energ√≠a equivalente a 21,000 toneladas de TNT!',
            category: 'fundamental',
            difficulty: 2,
            source: 'Relatividad Especial - Einstein'
        },
        {
            title: 'El Principio de Incertidumbre',
            content: 'Seg√∫n Heisenberg, es imposible conocer simult√°neamente con precisi√≥n absoluta la posici√≥n y el momento de una part√≠cula: $$\\Delta x \\cdot \\Delta p \\geq \\frac{\\hbar}{2}$$. ¬°La naturaleza misma es probabil√≠stica!',
            category: 'fundamental',
            difficulty: 3,
            source: 'Mec√°nica Cu√°ntica'
        },
        {
            title: 'Gravedad Universal',
            content: 'Newton descubri√≥ que la fuerza gravitatoria entre dos objetos es $$F = G\\frac{m_1 m_2}{r^2}$$. ¬°La misma fuerza que hace caer una manzana mantiene la Luna en √≥rbita!',
            category: 'fundamental',
            difficulty: 2,
            source: 'Principia Mathematica - Newton'
        },
        {
            title: 'N√∫mero de Avogadro',
            content: 'Un mol de cualquier sustancia contiene exactamente $$6.022 \\times 10^{23}$$ part√≠culas. ¬°Si contaras un √°tomo por segundo, tardar√≠as 19 mil millones de a√±os en contar un mol!',
            category: 'fundamental',
            difficulty: 1,
            source: 'Qu√≠mica y F√≠sica Molecular'
        }
    ],

    // ‚ö° ELECTRICIDAD Y MAGNETISMO
    electromagnetism: [
        {
            title: 'Rayos: Electricidad Natural',
            content: 'Un rayo t√≠pico transporta unos 30,000 amperios de corriente y alcanza temperaturas de 30,000¬∞C - ¬°cinco veces m√°s caliente que la superficie del Sol!',
            category: 'electromagnetism',
            difficulty: 1,
            source: 'Meteorolog√≠a'
        },
        {
            title: 'Campos Electromagn√©ticos',
            content: 'Las ecuaciones de Maxwell $$\\nabla \\times \\vec{E} = -\\frac{\\partial \\vec{B}}{\\partial t}$$ nos ense√±an que los campos el√©ctricos y magn√©ticos est√°n √≠ntimamente conectados. ¬°Sin esta conexi√≥n no existir√≠an las ondas de radio!',
            category: 'electromagnetism',
            difficulty: 3,
            source: 'Ecuaciones de Maxwell'
        },
        {
            title: 'Superconductividad',
            content: 'Algunos materiales a temperaturas muy bajas pueden conducir electricidad sin resistencia alguna. ¬°Una corriente el√©ctrica en un superconductor puede fluir para siempre sin perder energ√≠a!',
            category: 'electromagnetism',
            difficulty: 2,
            source: 'F√≠sica de Materiales'
        }
    ],

    // üå°Ô∏è TERMODIN√ÅMICA Y TEMPERATURA
    thermodynamics: [
        {
            title: 'Cero Absoluto',
            content: 'La temperatura m√°s baja posible es el cero absoluto: $$T = 0 \\, K = -273.15¬∞C$$. ¬°A esta temperatura, incluso los √°tomos dejan de moverse!',
            category: 'thermodynamics',
            difficulty: 1,
            source: 'Termodin√°mica'
        },
        {
            title: 'Entrop√≠a del Universo',
            content: 'La segunda ley de la termodin√°mica establece que $$\\Delta S \\geq 0$$. ¬°El universo tiende hacia el desorden m√°ximo, y por eso no podemos "deshacernos" del calor!',
            category: 'thermodynamics',
            difficulty: 3,
            source: 'Segunda Ley de la Termodin√°mica'
        },
        {
            title: 'M√°quinas T√©rmicas',
            content: 'La eficiencia m√°xima te√≥rica de una m√°quina t√©rmica est√° dada por $$\\eta = 1 - \\frac{T_f}{T_c}$$. ¬°Ning√∫n motor puede ser 100% eficiente debido a las leyes de la termodin√°mica!',
            category: 'thermodynamics',
            difficulty: 2,
            source: 'Ciclo de Carnot'
        }
    ],

    // üåä ONDAS Y SONIDO
    waves: [
        {
            title: 'Silencio en el Espacio',
            content: 'En el espacio exterior no hay sonido porque las ondas sonoras necesitan un medio material para propagarse. ¬°Las explosiones de las pel√≠culas espaciales son art√≠sticamente dram√°ticas pero f√≠sicamente incorrectas!',
            category: 'waves',
            difficulty: 1,
            source: 'Ac√∫stica'
        },
        {
            title: 'Ondas Gravitacionales',
            content: 'Einstein predijo que la gravedad se propaga como ondas a la velocidad de la luz. ¬°En 2015, LIGO detect√≥ por primera vez estas ondulaciones en el espacio-tiempo causadas por la colisi√≥n de agujeros negros!',
            category: 'waves',
            difficulty: 3,
            source: 'Relatividad General'
        },
        {
            title: 'Efecto Doppler',
            content: 'La frecuencia observada de una onda cambia cuando la fuente se mueve: $$f\' = f\\frac{v \\pm v_o}{v \\pm v_s}$$. ¬°Es por esto que la sirena de una ambulancia suena diferente cuando se acerca o se aleja!',
            category: 'waves',
            difficulty: 2,
            source: 'Ac√∫stica'
        }
    ],

    // üöÄ ASTRONOM√çA Y COSMOLOG√çA
    astronomy: [
        {
            title: 'Agujeros Negros',
            content: 'Un agujero negro es tan denso que ni siquiera la luz puede escapar. ¬°Si pudieras comprimir la Tierra hasta el tama√±o de una canica, se convertir√≠a en un agujero negro!',
            category: 'astronomy',
            difficulty: 2,
            source: 'Astrof√≠sica'
        },
        {
            title: 'Expansi√≥n del Universo',
            content: 'El universo se expande seg√∫n la ley de Hubble: $$v = H_0 \\cdot d$$. ¬°Las galaxias m√°s distantes se alejan de nosotros m√°s r√°pido, y algunas ya se mueven m√°s r√°pido que la luz!',
            category: 'astronomy',
            difficulty: 3,
            source: 'Cosmolog√≠a'
        },
        {
            title: 'Estrellas de Neutrones',
            content: 'Una cucharadita de material de estrella de neutrones pesar√≠a aproximadamente mil millones de toneladas. ¬°Estas estrellas son tan densas que un cent√≠metro c√∫bico pesa lo mismo que el Monte Everest!',
            category: 'astronomy',
            difficulty: 2,
            source: 'Astrof√≠sica Estelar'
        },
        {
            title: 'Velocidad de Escape',
            content: 'Para escapar de la gravedad de la Tierra necesitas una velocidad m√≠nima de $$v_e = \\sqrt{\\frac{2GM}{r}} \\approx 11.2 \\, km/s$$. ¬°Los cohetes deben alcanzar esta velocidad para llegar al espacio!',
            category: 'astronomy',
            difficulty: 2,
            source: 'Mec√°nica Orbital'
        }
    ],

    // ‚öõÔ∏è F√çSICA CU√ÅNTICA Y PART√çCULAS
    quantum: [
        {
            title: 'Entrelazamiento Cu√°ntico',
            content: 'Dos part√≠culas pueden estar "entrelazadas" de tal forma que medir una afecta instant√°neamente a la otra, sin importar la distancia. ¬°Einstein lo llam√≥ "acci√≥n fantasmal a distancia"!',
            category: 'quantum',
            difficulty: 3,
            source: 'Mec√°nica Cu√°ntica'
        },
        {
            title: 'Efecto T√∫nel Cu√°ntico',
            content: 'En el mundo cu√°ntico, las part√≠culas pueden "atravesar" barreras que cl√°sicamente ser√≠an imposibles de superar. ¬°Este efecto hace posible que funcionen los transistores en tu tel√©fono!',
            category: 'quantum',
            difficulty: 3,
            source: 'F√≠sica Cu√°ntica'
        },
        {
            title: 'Dualidad Onda-Part√≠cula',
            content: 'Los electrones y fotones se comportan como ondas y como part√≠culas dependiendo de c√≥mo los observemos. ¬°La energ√≠a de un fot√≥n es $$E = h\\nu$$, conectando su naturaleza ondulatoria con la corpuscular!',
            category: 'quantum',
            difficulty: 2,
            source: 'Mec√°nica Cu√°ntica'
        },
        {
            title: 'Gato de Schr√∂dinger',
            content: 'Seg√∫n la interpretaci√≥n de Copenhague de la mec√°nica cu√°ntica, un gato puede estar simult√°neamente vivo y muerto hasta que alguien abra la caja para observarlo. ¬°Es una paradoja que ilustra lo extra√±o del mundo cu√°ntico!',
            category: 'quantum',
            difficulty: 3,
            source: 'Interpretaci√≥n Cu√°ntica'
        }
    ],

    // üèÉ MEC√ÅNICA Y MOVIMIENTO
    mechanics: [
        {
            title: 'Ca√≠da Libre de Galileo',
            content: 'Galileo demostr√≥ que todos los objetos caen con la misma aceleraci√≥n en el vac√≠o, independientemente de su masa. ¬°Una pluma y un martillo caen igual en la Luna, como demostr√≥ el astronauta David Scott!',
            category: 'mechanics',
            difficulty: 1,
            source: 'Experimentos de Galileo'
        },
        {
            title: 'Conservaci√≥n del Momento',
            content: 'El momento se conserva en todas las colisiones: $$\\sum \\vec{p}_{inicial} = \\sum \\vec{p}_{final}$$. ¬°Es por esto que los cohetes pueden moverse en el espacio sin "empujar" contra nada!',
            category: 'mechanics',
            difficulty: 2,
            source: 'Leyes de Newton'
        },
        {
            title: 'Precesi√≥n Girosc√≥pica',
            content: 'Un giroscopio en rotaci√≥n mantiene su orientaci√≥n en el espacio. ¬°Esta propiedad se usa en los sistemas de navegaci√≥n de aviones y naves espaciales!',
            category: 'mechanics',
            difficulty: 2,
            source: 'Mec√°nica de Cuerpos R√≠gidos'
        },
        {
            title: 'Fuerza Centr√≠peta',
            content: 'Para mantener un objeto en movimiento circular se necesita una fuerza dirigida hacia el centro: $$F_c = \\frac{mv^2}{r}$$. ¬°Es la gravedad la que proporciona esta fuerza para mantener la Luna en √≥rbita!',
            category: 'mechanics',
            difficulty: 2,
            source: 'Mec√°nica Cl√°sica'
        }
    ],

    // üíé √ìPTICA Y LUZ
    optics: [
        {
            title: 'Arco Iris Circular',
            content: 'Los arco iris son en realidad c√≠rculos completos. Solo vemos arcos porque el suelo bloquea la parte inferior. ¬°Desde un avi√≥n puedes ver el c√≠rculo completo!',
            category: 'optics',
            difficulty: 1,
            source: '√ìptica Atmosf√©rica'
        },
        {
            title: 'Reflexi√≥n Total Interna',
            content: 'Cuando la luz viaja de un medio m√°s denso a uno menos denso con un √°ngulo mayor que el cr√≠tico, se refleja completamente. ¬°Este principio hace posible la fibra √≥ptica de internet!',
            category: 'optics',
            difficulty: 2,
            source: '√ìptica Geom√©trica'
        },
        {
            title: 'Interferencia Cu√°ntica',
            content: 'En el experimento de la doble rendija, un solo fot√≥n puede interferir consigo mismo, creando patrones de interferencia. ¬°Esto demuestra la naturaleza ondulatoria de la luz!',
            category: 'optics',
            difficulty: 3,
            source: '√ìptica Cu√°ntica'
        }
    ],

    // üåç F√çSICA DE LA TIERRA
    earth_physics: [
        {
            title: 'Campo Magn√©tico Terrestre',
            content: 'El campo magn√©tico de la Tierra nos protege de la radiaci√≥n solar. ¬°Sin √©l, la atm√≥sfera ser√≠a arrastrada por el viento solar como le pas√≥ a Marte!',
            category: 'earth_physics',
            difficulty: 2,
            source: 'Geof√≠sica'
        },
        {
            title: 'Resonancia de Schumann',
            content: 'La cavidad entre la superficie terrestre y la ionosfera resuena a aproximadamente 7.83 Hz. ¬°Algunos cient√≠ficos creen que esta frecuencia influye en los ritmos biol√≥gicos!',
            category: 'earth_physics',
            difficulty: 3,
            source: 'F√≠sica Atmosf√©rica'
        },
        {
            title: 'Gravedad Variable',
            content: 'La gravedad no es igual en toda la Tierra. Es ligeramente menor en el ecuador ($$g = 9.78 \\, m/s^2$$) que en los polos ($$g = 9.83 \\, m/s^2$$) debido a la rotaci√≥n y forma de la Tierra.',
            category: 'earth_physics',
            difficulty: 2,
            source: 'Geodesia'
        }
    ]
};

// ================================================
// üéØ FUNCIONES DE ACCESO A CURIOSIDADES MEJORADAS
// ================================================

/**
 * üé≤ Obtiene una curiosidad completamente aleatoria - MEJORADA
 * @returns {Object} Objeto curiosidad con t√≠tulo y contenido
 */
function getRandomCuriosity() {
    const allCuriosities = [];
    
    // üìù Recopilar todas las curiosidades
    Object.keys(curiosityDatabase).forEach(category => {
        curiosityDatabase[category].forEach(curiosity => {
            allCuriosities.push(curiosity);
        });
    });
    
    if (allCuriosities.length === 0) {
        console.warn('‚ö†Ô∏è No hay curiosidades disponibles');
        return {
            title: 'Dato Curioso',
            content: 'La f√≠sica est√° llena de maravillas esperando ser descubiertas. ¬°Sigue explorando!',
            category: 'general',
            difficulty: 1
        };
    }
    
    const randomIndex = Math.floor(Math.random() * allCuriosities.length);
    const selectedCuriosity = allCuriosities[randomIndex];
    
    console.log(`‚ú® Curiosidad seleccionada: ${selectedCuriosity.title} (${selectedCuriosity.category})`);
    return selectedCuriosity;
}

/**
 * üìö Obtiene curiosidades por categor√≠a
 * @param {string} category - Categor√≠a deseada
 * @returns {Array} Array de curiosidades de la categor√≠a
 */
function getCuriositiesByCategory(category) {
    const result = curiosityDatabase[category] || [];
    console.log(`üìö Curiosidades encontradas en ${category}: ${result.length}`);
    return result;
}

/**
 * ‚≠ê Obtiene curiosidades por nivel de dificultad
 * @param {number} difficulty - Nivel de dificultad (1-3)
 * @returns {Array} Array de curiosidades del nivel especificado
 */
function getCuriositiesByDifficulty(difficulty) {
    const filtered = [];
    
    Object.keys(curiosityDatabase).forEach(category => {
        curiosityDatabase[category].forEach(curiosity => {
            if (curiosity.difficulty === difficulty) {
                filtered.push(curiosity);
            }
        });
    });
    
    console.log(`‚≠ê Curiosidades nivel ${difficulty}: ${filtered.length}`);
    return filtered;
}

/**
 * üéØ Obtiene una curiosidad aleatoria de una categor√≠a espec√≠fica
 * @param {string} category - Categor√≠a deseada
 * @returns {Object|null} Curiosidad aleatoria o null si no existe la categor√≠a
 */
function getRandomCuriosityByCategory(category) {
    const categoryItems = getCuriositiesByCategory(category);
    
    if (categoryItems.length === 0) {
        console.warn(`‚ö†Ô∏è No se encontraron curiosidades en categor√≠a: ${category}`);
        return null;
    }
    
    const randomIndex = Math.floor(Math.random() * categoryItems.length);
    const selected = categoryItems[randomIndex];
    console.log(`üéØ Curiosidad por categor√≠a ${category}: ${selected.title}`);
    return selected;
}

/**
 * üîç Busca curiosidades por palabra clave en t√≠tulo o contenido
 * @param {string} keyword - Palabra clave a buscar
 * @returns {Array} Array de curiosidades que contienen la palabra clave
 */
function searchCuriosities(keyword) {
    const results = [];
    const searchTerm = keyword.toLowerCase();
    
    Object.keys(curiosityDatabase).forEach(category => {
        curiosityDatabase[category].forEach(curiosity => {
            const titleMatch = curiosity.title.toLowerCase().includes(searchTerm);
            const contentMatch = curiosity.content.toLowerCase().includes(searchTerm);
            
            if (titleMatch || contentMatch) {
                results.push({
                    ...curiosity,
                    matchType: titleMatch ? 'title' : 'content'
                });
            }
        });
    });
    
    console.log(`üîç B√∫squeda "${keyword}": ${results.length} resultados`);
    return results;
}

/**
 * üìä Obtiene estad√≠sticas del banco de curiosidades
 * @returns {Object} Estad√≠sticas del banco de datos
 */
function getCuriosityStats() {
    const stats = {
        totalCuriosities: 0,
        byCategory: {},
        byDifficulty: { 1: 0, 2: 0, 3: 0 },
        categories: Object.keys(curiosityDatabase)
    };
    
    Object.keys(curiosityDatabase).forEach(category => {
        const categoryItems = curiosityDatabase[category];
        stats.byCategory[category] = categoryItems.length;
        stats.totalCuriosities += categoryItems.length;
        
        categoryItems.forEach(curiosity => {
            stats.byDifficulty[curiosity.difficulty]++;
        });
    });
    
    return stats;
}

/**
 * üéØ Obtiene curiosidades relacionadas con un tema de f√≠sica espec√≠fico - MEJORADA
 * @param {string} physicsTopic - Tema de f√≠sica (magnitudes, cinematica, etc.)
 * @returns {Array} Array de curiosidades relacionadas
 */
function getCuriositiesByPhysicsTopic(physicsTopic) {
    const topicMappings = {
        magnitudes: ['fundamental', 'mechanics'],
        si: ['fundamental', 'mechanics'],
        cinematica: ['mechanics', 'astronomy'],
        mru: ['mechanics', 'astronomy'],
        mrua: ['mechanics', 'astronomy'],
        mcu: ['mechanics', 'astronomy'],
        gravedad: ['mechanics', 'astronomy', 'fundamental'],
        parabolico: ['mechanics', 'astronomy']
    };
    
    const relevantCategories = topicMappings[physicsTopic] || ['fundamental'];
    const results = [];
    
    relevantCategories.forEach(category => {
        results.push(...getCuriositiesByCategory(category));
    });
    
    console.log(`üéì Curiosidades para tema ${physicsTopic}: ${results.length} encontradas`);
    return results;
}

/**
 * üß† Obtiene una curiosidad educativa basada en el progreso del jugador - MEJORADA
 * @param {Object} gameState - Estado actual del juego
 * @returns {Object} Curiosidad apropiada para el contexto
 */
function getContextualCuriosity(gameState) {
    console.log('üß† Obteniendo curiosidad contextual...');
    
    if (!gameState) {
        console.log('üîÑ No hay gameState, devolviendo curiosidad aleatoria');
        return getRandomCuriosity();
    }
    
    // üéØ Seleccionar dificultad basada en el nivel del jugador
    let targetDifficulty = 1;
    if (gameState.currentLevel >= 2) targetDifficulty = 2;
    if (gameState.currentLevel >= 3) targetDifficulty = 3;
    
    console.log(`üéØ Nivel de dificultad objetivo: ${targetDifficulty} (Nivel jugador: ${gameState.currentLevel})`);
    
    // üìö Obtener curiosidades relacionadas con los temas seleccionados
    const topicCuriosities = [];
    if (gameState.selectedTopics && gameState.selectedTopics.length > 0) {
        gameState.selectedTopics.forEach(topic => {
            const topicCurios = getCuriositiesByPhysicsTopic(topic);
            topicCuriosities.push(...topicCurios);
            console.log(`üìñ Tema ${topic}: +${topicCurios.length} curiosidades`);
        });
    }
    
    // üîç Filtrar por dificultad apropiada
    const appropriateCuriosities = topicCuriosities.filter(c => c.difficulty <= targetDifficulty);
    console.log(`‚úÖ Curiosidades apropiadas: ${appropriateCuriosities.length}`);
    
    if (appropriateCuriosities.length > 0) {
        const randomIndex = Math.floor(Math.random() * appropriateCuriosities.length);
        const selected = appropriateCuriosities[randomIndex];
        console.log(`üéâ Curiosidad contextual seleccionada: ${selected.title}`);
        return selected;
    }
    
    // üîÑ Fallback a curiosidad aleatoria de dificultad apropiada
    const fallbackCuriosities = getCuriositiesByDifficulty(targetDifficulty);
    if (fallbackCuriosities.length > 0) {
        const randomIndex = Math.floor(Math.random() * fallbackCuriosities.length);
        const selected = fallbackCuriosities[randomIndex];
        console.log(`üîÑ Curiosidad fallback seleccionada: ${selected.title}`);
        return selected;
    }
    
    console.log('üé≤ Usando curiosidad completamente aleatoria como √∫ltimo recurso');
    return getRandomCuriosity();
}

/**
 * üéÆ Funci√≥n mejorada espec√≠ficamente para el juego
 * @param {Object} gameState - Estado del juego
 * @param {boolean} forceShow - Forzar mostrar curiosidad (para debugging)
 * @returns {Object|null} Curiosidad o null
 */
function getGameCuriosity(gameState, forceShow = false) {
    // üé≤ 80% de probabilidad de mostrar curiosidad (era 40%)
    const shouldShow = forceShow || Math.random() < 0.8;
    
    if (!shouldShow) {
        console.log('üé≤ Dado de curiosidad: No mostrar esta vez');
        return null;
    }
    
    try {
        const curiosity = getContextualCuriosity(gameState);
        console.log(`üåü ¬°Curiosidad para el juego! ${curiosity.title}`);
        return curiosity;
    } catch (error) {
        console.error('‚ùå Error obteniendo curiosidad para el juego:', error);
        return getRandomCuriosity(); // Fallback seguro
    }
}

// ================================================
// üåê EXPORTACIONES Y CONFIGURACI√ìN GLOBAL
// ================================================

// üåü Exponer funciones principales al objeto window para uso global
window.curiosityDatabase = curiosityDatabase;
window.getRandomCuriosity = getRandomCuriosity;
window.getCuriositiesByCategory = getCuriositiesByCategory;
window.getCuriositiesByDifficulty = getCuriositiesByDifficulty;
window.getRandomCuriosityByCategory = getRandomCuriosityByCategory;
window.searchCuriosities = searchCuriosities;
window.getCuriosityStats = getCuriosityStats;
window.getCuriositiesByPhysicsTopic = getCuriositiesByPhysicsTopic;
window.getContextualCuriosity = getContextualCuriosity;
window.getGameCuriosity = getGameCuriosity; // üîß NUEVA funci√≥n espec√≠fica para el juego

// üß™ Exponer funciones de testing en desarrollo
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
    window.validateCuriosities = () => {
        console.log('üß™ Validando banco de curiosidades...');
        const stats = getCuriosityStats();
        console.table(stats.byCategory);
        console.log(`‚úÖ Total: ${stats.totalCuriosities} curiosidades`);
        
        // Test de funciones
        console.log('üé≤ Test curiosidad aleatoria:', getRandomCuriosity().title);
        console.log('üéØ Test curiosidad por tema:', getCuriositiesByPhysicsTopic('gravedad').length, 'encontradas');
        
        return stats;
    };
    
    console.log('üß™ Funciones de testing disponibles: window.validateCuriosities()');
}

// üìä Mostrar estad√≠sticas al cargar
const initialStats = getCuriosityStats();
console.log('üß† Banco de curiosidades MEJORADO cargado:');
console.log(`‚úÖ ${initialStats.totalCuriosities} curiosidades en ${initialStats.categories.length} categor√≠as`);
console.log('üìä Por dificultad:', initialStats.byDifficulty);

// üéÆ Test inicial para asegurar que funciona
try {
    const testCuriosity = getRandomCuriosity();
    console.log(`üß™ Test inicial exitoso: "${testCuriosity.title}"`);
} catch (error) {
    console.error('‚ùå Error en test inicial de curiosidades:', error);
}

console.log('üß† curiosities.js v2.1 cargado completamente - MEJORADO');
console.log('üéØ Funciones optimizadas para mayor visibilidad en el juego');

// ================================================
// üèÅ FIN DEL ARCHIVO CURIOSITIES.JS MEJORADO
// ================================================